apiVersion: v1 
kind: Service
metadata:
  name: loadme
spec:
  type: LoadBalancer
  selector:
    app: loadme
  ports:
    - protocol: TCP
      port: 8080 #loadbalancer
      nodePort: 32591 
      targetPort: 8081 # Container
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadme
spec:
  replicas: 2
  selector:
    matchLabels:
      app: loadme
  template:
    metadata:
      name: loadme
      labels:
        app: loadme
    spec:
      containers:
      - name: loadme
        image: 553222892121.dkr.ecr.us-east-1.amazonaws.com/capstoneproject:latest
        env:
        - name: app
          value: critical
        resources:
          requests:
            memory: "400Mi"
            cpu: .25
          limits:
            memory: "1Gi"
            cpu: 1
      tolerations: # can run on tainted node
      - key: key
        operator: Equal
        value: "true"
        effect: NoSchedule
      affinity: # will only run on tainted node. 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: in
                values:
                - "true"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%

--- #Define the HPA
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: loadme
spec:
  scaleTargetRef: # Target
    apiVersion: apps/v1
    kind: Deployment
    name: loadme
  minReplicas: 1
  maxReplicas: 5
  metrics: # Set up the Gauge
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50 # threshold to be set. 50% of the requested value. 